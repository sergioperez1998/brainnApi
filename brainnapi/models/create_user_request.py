# -*- coding: utf-8 -*-

"""
brainnapi

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""


class CreateUserRequest(object):

    """Implementation of the 'createUserRequest' model.

    TODO: type model description here.

    Attributes:
        password (string): TODO: type description here.
        is_superuser (bool): TODO: type description here.
        username (string): TODO: type description here.
        first_name (string): TODO: type description here.
        email (string): TODO: type description here.
        is_staff (bool): TODO: type description here.
        is_active (bool): TODO: type description here.
        groups (list of int): TODO: type description here.
        user_permissions (list of int): TODO: type description here.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "password": 'password',
        "is_superuser": 'is_superuser',
        "username": 'username',
        "first_name": 'first_name',
        "email": 'email',
        "is_staff": 'is_staff',
        "is_active": 'is_active',
        "groups": 'groups',
        "user_permissions": 'user_permissions'
    }

    def __init__(self,
                 password=None,
                 is_superuser=None,
                 username=None,
                 first_name=None,
                 email=None,
                 is_staff=None,
                 is_active=None,
                 groups=None,
                 user_permissions=None):
        """Constructor for the CreateUserRequest class"""

        # Initialize members of the class
        self.password = password
        self.is_superuser = is_superuser
        self.username = username
        self.first_name = first_name
        self.email = email
        self.is_staff = is_staff
        self.is_active = is_active
        self.groups = groups
        self.user_permissions = user_permissions

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """
        if dictionary is None:
            return None

        # Extract variables from the dictionary
        password = dictionary.get('password')
        is_superuser = dictionary.get('is_superuser')
        username = dictionary.get('username')
        first_name = dictionary.get('first_name')
        email = dictionary.get('email')
        is_staff = dictionary.get('is_staff')
        is_active = dictionary.get('is_active')
        groups = dictionary.get('groups')
        user_permissions = dictionary.get('user_permissions')

        # Return an object of this model
        return cls(password,
                   is_superuser,
                   username,
                   first_name,
                   email,
                   is_staff,
                   is_active,
                   groups,
                   user_permissions)
